// <auto-generated />
using Logic.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Logic.Data.Migrations
{
    [DbContext(typeof(DbEcommerContext))]
    [Migration("20221130025309_inicial")]
    partial class inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Core.Entities.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.ToTable("Categgoria");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Categoria Uno"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Categoria Dos"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Categoria Tres"
                        });
                });

            modelBuilder.Entity("Core.Entities.Marca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("Marca");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Marca Generica 1"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Marca Generica 2"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Marca Generica 3"
                        });
                });

            modelBuilder.Entity("Core.Entities.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("MarcaId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<string>("imagen")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<decimal>("precio")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("MarcaId");

                    b.ToTable("Productos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoriaId = 1,
                            Descripcion = "Descripcion Generica 1",
                            MarcaId = 1,
                            Nombre = "Producto Generico 1",
                            Stock = 5,
                            imagen = "https://localhost/imagesn/imagen1.jpg",
                            precio = 152.45m
                        },
                        new
                        {
                            Id = 2,
                            CategoriaId = 2,
                            Descripcion = "Descripcion Generica 2",
                            MarcaId = 2,
                            Nombre = "Producto Generico 2",
                            Stock = 5,
                            imagen = "https://localhost/imagesn/imagen2.jpg",
                            precio = 60.3m
                        },
                        new
                        {
                            Id = 3,
                            CategoriaId = 3,
                            Descripcion = "Descripcion Generica 3",
                            MarcaId = 3,
                            Nombre = "Producto Generico 3",
                            Stock = 5,
                            imagen = "https://localhost/imagesn/imagen3.jpg",
                            precio = 200m
                        });
                });

            modelBuilder.Entity("Core.Entities.Producto", b =>
                {
                    b.HasOne("Core.Entities.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.Marca", "Marca")
                        .WithMany()
                        .HasForeignKey("MarcaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Marca");
                });
#pragma warning restore 612, 618
        }
    }
}
